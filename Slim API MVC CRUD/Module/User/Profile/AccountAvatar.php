<?php
/**
 * Created by PhpStorm.
 * User: Luke
 * Date: 20/3/2019
 * Time: 7:08 PM
 */

namespace Module\User\Profile;

use Lib\Core\Controller\AbstractController;
use Lib\Core\Controller\AbstractNodeController;
use Lib\Core\Helper\Db\Map\Column;
use Module\FileSystem\Type\Image;

define('SOURCE_MODULE','Module/User/AccountAvatar' );

/**
 * AccountAvatar
 * @property string $path
 * @property int $user_id
 */
class AccountAvatar extends AbstractNodeController
{
    public const TABLE_NAME = 'user_avatar';
    protected const ID_COLUMN = '';
    protected static $_column_cache = NULL;

    public $_image;
    /**
     * @param int $user_id
     * @return AccountAvatar|null
     */
    public static function loadWithUserId(int $user_id) {
        return static::_load('user_id=?','i',[$user_id]);
    }

    /**
     * @param string $blob
     * @param int $user_id
     * @return AccountAvatar
     */
    public static function createFromBlobWithUserId(string $blob, int $user_id)
    {
        $obj = new self();
        $image = Image::createFromBlob($blob);
        $obj->setImage($image);
        $obj->path = $image->path;
        $obj->user_id = $user_id;
        $obj->save(true);
        return $obj;
    }

    /**
     * @param Image $image
     */
    public function setImage(Image $image) {
        $this->_image = $image;
    }

    /**
     * @param string $path
     * @param int $user_id
     * @return \AccountAvatar
     */
    public static function createFromUploadedFileWithUserId(string $path, int $user_id)
    {
        $return = static::createFromUploadedFile($path); // TODO: Change the autogenerated stub
        $return->user_id = $user_id;
        return $return;
    }

    /**
     * @return int
     */
    public function getUserId() {
        return $this->user_id;
    }

    /**
     * @return \Lib\Core\Helper\Db\Map\Column[]
     */
    protected static function getColumns()
    {
        if (static::$_column_cache == NULL) {
            static::$_column_cache = [
                'path' => new Column('media_id', 'i',(new Column('media.path','s',NULL,'media.id'))),
                'user_id' => new Column('user_id', 'i'),
            ];
        }
        return static::$_column_cache;
    }
    /**
     * @return Image
     */
    function getChild()
    {
        return $this->image;
    }

}