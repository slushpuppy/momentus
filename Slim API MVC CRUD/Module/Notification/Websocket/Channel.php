<?php


namespace Module\Notification\Websocket;


use Lib\Core\Controller\AbstractController;
use Lib\Core\Helper\Db\Map\Column;
use Lib\Core\System\DbString;
use Module\Exception\MySQL;

/**
 * Class Channel
 * @package Module\Notification\Websocket
 * @property-read string $channel_name
 * @property int $user_id
 */
class Channel extends \Lib\Core\Controller\AbstractController
{
    public const TABLE_NAME = 'websocket_channel';
    public const SOURCE_MODULE = 'Module\Notification\Websocket\Channel';
    protected static $_column_cache = NULL;

    /**
     *
     * @return Lib\Core\Helper\Db\Map\Column[]
     */
    public static function getColumns()
    {
        if (static::$_column_cache == NULL)
        {
            static::$_column_cache = [
                (new Column(self::TABLE_NAME, 'name_sys_string_id','i'))->join('id',Column::getSysTextColumn()->setAlias('channel_name')),
                (new Column(self::TABLE_NAME,'user_id','i'))


            ];
        }
        return static::$_column_cache;
    }

    /**
     * @param int $user_id
     * @return Channel[]
     * @throws \Module\Exception\MySQL
     */
    public static function loadChannelsFromUserId(int $user_id) {
        return static::_loadAll('user_id=?','i',[$user_id]);
    }

    /**
     * @param string $name
     * @param int $id
     */
    public static function createChannelFromModuleNameId(string $moduleName,int $moduleUniqueId,int $userId) {
        $ret = new self();
        $ret->setChannelSubscriptionName(static::createDefaultChannelName($moduleName,$moduleUniqueId));
        $ret->setUserId($userId);
        $ret->save(true);
        return $ret;
    }

    /**
     * @param IChannel $obj
     * @param int $userId
     * @return Channel
     * @throws MySQL
     */
    public static function createChannelFromObject(IChannel $obj,int $userId) {
        $ret = new self();
        $ret->setChannelSubscriptionName($obj->getChannelName());
        $ret->setUserId($userId);
        $ret->save(true);
        return $ret;
    }

    /**
     * @param string $table_name
     * @param int $unique_index
     * @return string
     */
    public static function createDefaultChannelName(string $table_name,int $unique_index) {
        return $table_name.'-'.$unique_index;
    }
    /**
     * @param string $table_name
     * @param int $unique_index
     * @return $this
     */
    public function setChannelSubscriptionName(string $name) {
        $this->channel_name = $name;
        return $this;
    }

    /**
     * @param int $user_id
     * @return $this
     */
    public function setUserId(int $user_id) {
        $this->user_id = $user_id;
        return $this;
    }


    /**
     * @param bool $updateIfFound
     * @throws MySQL
     */
    public function save(bool $updateIfFound = true)
    {
        $sysStr = new DbString();
        $sysStr->name = $this->channel_name;
        $sysStr->save(true);
        parent::save($updateIfFound); // TODO: Change the autogenerated stub
    }

}


